{
  "__doc__": "\nConfiguration for training harness.\n",
  "cxr_only": false,
  "dataloader_configs": {
    "train": {
      "batch_size": 16,
      "num_workers": 8,
      "shuffle": false
    },
    "valid": {
      "batch_size": 20,
      "num_workers": 8,
      "shuffle": true
    }
  },
  "dataset_configs": {
    "train": {
      "args": {
        "cxr_only": false,
        "images_dir": "/lfs/1/gangus/repositories/pytorch-classification/catheter_detector/results/catheter_detect/test_latest/images",
        "split_dir": "/lfs/1/gangus/repositories/pytorch-classification/drain_detector/data/by-patient-id",
        "transforms": {
          "joint": [],
          "x1": [
            {
              "args": {},
              "class_name": "ToTensor"
            },
            {
              "args": {
                "mean": [
                  0.5
                ],
                "std": [
                  0.5
                ]
              },
              "class_name": "Normalize"
            }
          ],
          "x2": [
            {
              "args": {},
              "class_name": "ToTensor"
            },
            {
              "args": {
                "mean": [
                  0.5,
                  0.5
                ],
                "std": [
                  0.5,
                  0.5
                ]
              },
              "class_name": "Normalize"
            }
          ]
        }
      },
      "class_name": "DrainDetectionDataset"
    },
    "valid": {
      "args": {
        "cxr_only": false,
        "images_dir": "/lfs/1/gangus/repositories/pytorch-classification/catheter_detector/results/catheter_detect/test_latest/images",
        "split_dir": "/lfs/1/gangus/repositories/pytorch-classification/drain_detector/data/by-patient-id",
        "transforms": {
          "joint": [],
          "x1": [
            {
              "args": {},
              "class_name": "ToTensor"
            },
            {
              "args": {
                "mean": [
                  0.5
                ],
                "std": [
                  0.5
                ]
              },
              "class_name": "Normalize"
            }
          ],
          "x2": [
            {
              "args": {},
              "class_name": "ToTensor"
            },
            {
              "args": {
                "mean": [
                  0.5,
                  0.5
                ],
                "std": [
                  0.5,
                  0.5
                ]
              },
              "class_name": "Normalize"
            }
          ]
        }
      },
      "class_name": "DrainDetectionDataset"
    }
  },
  "decoder_args": {
    "dropout_p": 0.0,
    "encoding_size": 1024,
    "num_layers": 2
  },
  "decoder_class": "LinearDecoder",
  "encoder_args": {
    "pretrained": true,
    "weights_path": false
  },
  "encoder_class": "ClippedDenseNet",
  "exp_dir": "experiments/drain_detection/cxr_seg/pretrain_imagenet",
  "hypothesis_conditions": [
    "drain_detection",
    "cxr_seg",
    "pretrain_imagenet"
  ],
  "images_dir": "/lfs/1/gangus/repositories/pytorch-classification/catheter_detector/results/catheter_detect/test_latest/images",
  "learner_config": {
    "lr_scheduler_config": {
      "lr_scheduler": "step",
      "step_config": {
        "gamma": 0.5,
        "step_size": 6
      },
      "warmup_steps": null,
      "warmup_unit": "batch"
    },
    "n_epochs": 100,
    "optimizer_config": {
      "l2": 0.0,
      "lr": 0.01,
      "optimizer": "adam"
    },
    "valid_split": "valid"
  },
  "logging_config": {
    "checkpointer_config": {
      "checkpoint_metric": {
        "drain/drain-detection-dataset/valid/roc_auc": "max"
      }
    },
    "checkpointing": true,
    "evaluation_freq": 1
  },
  "meta_config": {
    "device": 0
  },
  "pretrain_chexnet": false,
  "pretrain_imagenet": true,
  "sampler_configs": {
    "train": {
      "args": {
        "num_samples": 800,
        "replacement": true
      },
      "class_name": "RandomSampler"
    }
  },
  "seed": 923570742,
  "split_dir": "/lfs/1/gangus/repositories/pytorch-classification/drain_detector/data/by-patient-id",
  "task_to_cardinality_dict": {
    "drain": 2
  },
  "task_to_label_dict": {
    "drain": "drain"
  },
  "transforms": {
    "augmentation": {
      "joint": [],
      "x1": [],
      "x2": []
    },
    "preprocessing": {
      "joint": [],
      "x1": [
        {
          "args": {},
          "class_name": "ToTensor"
        },
        {
          "args": {
            "mean": [
              0.5
            ],
            "std": [
              0.5
            ]
          },
          "class_name": "Normalize"
        }
      ],
      "x2": [
        {
          "args": {},
          "class_name": "ToTensor"
        },
        {
          "args": {
            "mean": [
              0.5,
              0.5
            ],
            "std": [
              0.5,
              0.5
            ]
          },
          "class_name": "Normalize"
        }
      ]
    }
  }
}